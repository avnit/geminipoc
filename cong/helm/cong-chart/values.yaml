# Default values for cong-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
namespace: console-app

ingress:
  enabled: false

service:
  type: ClusterIP

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

consul:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/consul
    pullPolicy: IfNotPresent
    tag: "1.19.2"
  persistence:
    size: 1Gi
  config: {}
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

vault:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/vault
    pullPolicy: IfNotPresent
    tag: "1.0.2"
  rootToken: "changeme"
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

nginx:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/nginx
    pullPolicy: IfNotPresent
    tag: "1.26.3"
  service:
    type: LoadBalancer
  configTemplate: |
    worker_processes 1;
    events {
      worker_connections 1024;
    }
    http {
      sendfile on;
      upstream app_backend {
        server localhost:8080; # Replace with your actual backend service
      }
      server {
        listen 8181;
        location / {
          proxy_pass http://app_backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }
  tls:
    crt: ""
    key: ""
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

cassandra:
  enabled: true
  replicaCount: 1
  image:
    repository: cassandra
    pullPolicy: IfNotPresent
    tag: "4.1.3"
  persistence:
    size: 5Gi
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

mysql:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/mysql
    pullPolicy: IfNotPresent
    tag: "5.7.21"
  rootPassword: "mysecret"
  userPassword: "mysecret"
  persistence:
    size: 2Gi
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

uaa:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/cloudbreak-uaa
    pullPolicy: IfNotPresent
    tag: "1.0"
  config: {}
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

saq:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/saq
    pullPolicy: IfNotPresent
    tag: "3.0.0"
  persistence:
    size: 10Gi
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

kgservice:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/kgservice
    pullPolicy: IfNotPresent
    tag: "3.0.0"
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

jobScheduler:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-scheduler
    pullPolicy: IfNotPresent
    tag: "3.0.0"
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"
jobExecutor:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-executor
    pullPolicy: IfNotPresent
    tag: "3.0.0"
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

garbageCollector:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/garbage-collector
    pullPolicy: IfNotPresent
    tag: "3.0.0"
  livenessProbe:
    httpGet:
      path: /healthz
      port: 10127 # Use the actual health check port
    initialDelaySeconds: 15
    periodSeconds: 20
  readinessProbe:
    httpGet:
      path: /readyz
      port: 10127 # Use the actual readiness check port
    initialDelaySeconds: 5
    periodSeconds: 10
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

applicationService:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/application-service
    pullPolicy: IfNotPresent
    tag: "3.0.0"
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

documents:
  enabled: true
  replicaCount: 1
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/documents
    pullPolicy: IfNotPresent
    tag: "3.0.0"
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

bootstrap:
  enabled: true
  image:
    repository: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/bootstrap
    pullPolicy: IfNotPresent
    tag: "3.0.0"

log4j:
  config: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="INFO">
      <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
          <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
      </Appenders>
      <Loggers>
        <Root level="info">
          <AppenderRef ref="Console"/>
        </Root>
      </Loggers>
    </Configuration>

serviceAccount:
  create: true
