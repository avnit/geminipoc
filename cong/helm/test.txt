---
# Source: cong-chart/templates/mysql.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: console-app
  name: release-name-cong-chart-mysql-secrets
type: Opaque
data:
  root-password: bXlzZWNyZXQ=
  user-password: bXlzZWNyZXQ=
---
# Source: cong-chart/templates/nginx.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: console-app
  name: release-name-cong-chart-nginx-certs
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVRENDQWppZ0F3SUJBZ0lRZm5sYkc3WlNQQk45U1NObjliOGhwekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkamIyNW5MV05oTUI0WERUSTFNVEF5TWpFME1URXdORm9YRFRJMk1UQXlNakUwTVRFdwpORm93S0RFbU1DUUdBMVVFQXhNZGNtVnNaV0Z6WlMxdVlXMWxMV052Ym1jdFkyaGhjblF0Ym1kcGJuZ3dnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBRRHRIMWFiekhHaDF3YzlBaVBwM0VVY04KaTFJNjRrSUxtMmVYbXBmTkV2N2dMc3NVMlZBamFXbW1WTzM1VDJTRVRXQWNEOTZyeHlRTlZFK0NiMEUwY2NWTApKbjh6K052UEx5TFBac0R3NVJrclFUSnVwOGZqdWRYVTk3dCtBT0t4bi9mTTcvRWZyZDFuN084RVNyK2pxbDg1CkNXZGV0L1dBZ0YvVnZSQ1NQWmxKSktQWE8rSEZHWGttSHZoRSszckNQYTVCNUJCNE94OFV0YWlzRFYxbHN1eFMKRzJ1azVKQ0ZWNUpiVktQeGw0RzBZTnFhSWMwQnAxb1FBZDQ2V3JIT3R0bG5WbWUvcHA5VHd3cncvTG1xVjJycwpvVnIrN2o4bVZaeWhHN0cwdk9sUUFUSTc2dWxzWWRMUklCSDVJbXVrdGNnRDFVWFJNb2F1Y1JOdE9PelBBZ01CCkFBR2pnWXN3Z1lnd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQkdNK2JWVXpLd2lmcDRyS1R2bQp0MFRROGZlRU1DZ0dBMVVkRVFRaE1CK0NIWEpsYkdWaGMyVXRibUZ0WlMxamIyNW5MV05vWVhKMExXNW5hVzU0Ck1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBZTHUxQTRjaHhYT2VhUWtERElyRFlXYVo3cEZqUGNMTFJaejMKQmNqeDRsbWVYOTFvODV6Um1lZlpsRkhMNWZ1ME9INnhmZ0pLTGI5YTd2TmdLRVJKT1NIeitTeUFIY2N5dDM1VwpxRDU1NW95M2VWZDQwcFNTQXg0Rk1OSnZ1M3F1dDIxYU1ZSXVNVnhWY3Q3a00vSmFvVE1YQTlEU0FYNldMZDRYCjlldGcvZHZCNkUzbU5aZEVHUUxuZWR5Z3UzdUhYcEtweTV5aTNxdjVoK1JocVRSK2p4R3g4ajJKa2Y2Z2xzaW8KNGJZYkx3OURuS09acTBvMHhDVkpQYVhwU3ZCVnh2NFNEMFUvcFM5QW0xUHJKK2NjYmFOc1UyYlZzWE1sTDBqYwo0amZzanZ4Vk05QjIyZGU4YjlManl5TWhPbTAwSDlabzlvbndzQ1dHbW1rWVpYM28KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdEVBN1I5V204eHhvZGNIUFFJajZkeEZIRFl0U091SkNDNXRubDVxWHpSTCs0QzdMCkZObFFJMmxwcGxUdCtVOWtoRTFnSEEvZXE4Y2tEVlJQZ205Qk5ISEZTeVovTS9qYnp5OGl6MmJBOE9VWkswRXkKYnFmSDQ3blYxUGU3ZmdEaXNaLzN6Ty94SDYzZForenZCRXEvbzZwZk9RbG5YcmYxZ0lCZjFiMFFrajJaU1NTagoxenZoeFJsNUpoNzRSUHQ2d2oydVFlUVFlRHNmRkxXb3JBMWRaYkxzVWh0cnBPU1FoVmVTVzFTajhaZUJ0R0RhCm1pSE5BYWRhRUFIZU9scXh6cmJaWjFabnY2YWZVOE1LOFB5NXFsZHE3S0ZhL3U0L0psV2NvUnV4dEx6cFVBRXkKTytycGJHSFMwU0FSK1NKcnBMWElBOVZGMFRLR3JuRVRiVGpzendJREFRQUJBb0lCQUQxKzJIcTJpcUhRcEZiZwppMnZTRDltRmZIOURkQWVBMzlXRDdJRE5qbEs1MDFqNnZmQmIvN3BGSVhWTTdtK3JSWGpaeVJ0cDBxYzZack5oCmUwcmQyQm9qWXBNMERCdllJRzM3LzkxUWlpemxqSU8wVjVkbkNJeEovNGtNQjl5Q1F0VWs1Vzcyd1lYMFZHQTcKZG9RNVdFNW5OdHVIdU11WTZWb3c4Z0ZDNHA5eGIydkd5NHVuWGtzNW4yT2lKMWVaMjd2T09Vem04Q3ZTMERrLwo3WUNwQ1VxMmM1NEJENE5IMTVMTzE5c0dIcDdMNEhLV2E0SWFjZ1RWUGxRZDIyZGd5NmNkbEs3Q1RrNk1ncGpVCnFOTlU0NTVUM3JZYStqQzVSVHhLM0toYk90eElZWXdiQ3BCeXl2VUpSTUtoTy96MndZcjZWVmtjZlRGRjYxeU4KYll4T3IvRUNnWUVBeEd0RThPR3RxWkR0bFg1VGxuVWlydW9NUjI1U3htZDlKRUM3UjVRQ0d5dTg3ZE1saGlCUgptb0R3czRqSFIzWS82UHYwUzNJbzlkVnZUblZ3aVFoODZzdUhQUys5QXFTcFlhZ0hSVTFxZ2tIYzJHcWJNVTF3CkE5ZkttZkg1OFdXb1VtRVFUUWo2dWIwcUJsa1JXMDNUSFRRSG1xZ1IyVEZHc0VUUDd5TWVPaWNDZ1lFQTZ1MXgKVlZlOGVlclRwQWNKY0ZVc29EbkVMdk9JS2NmTUhwS2ZWZURMT05jMk1CY1BUQkZBRjBza3laNlZRL2dsMVlqMApzV2c2TVdvcldKQTZCakM3QkNwWE4ybGh3c3h2cEpZMGwyVDM2V1ptbllYTFpvY3hlWGluTy9EUnJxTHNMTGpTCjQ4N1hwVEZpazVQU21MRXAxbmF1Yk9NRXZZcU9IYXRJa1NxREtSa0NnWUEvYnRrajVlNDh2Y1pNcWpCNmZiZkcKdjJWWnlFSkpPdkRLUFhGK0MwbW0xcmc4SWgyVE5HckdOL0FFT3g4SWNDTHhyalRXRExjM3RVY3VFblZXZS94RApvNWs0Wkd0cEtCNWZvSEZBcTJERFVsdnROSGlNTXBNRFdyUmVoU3dRRHFHT2dUUlBmSi9rVGpmOU50U0pKUmdSCjdWU3JXSzN5ODV2OW55dDc4bDUzcndLQmdFcU51OCszbmlxYXFUdCt1REliOWFPTGNZVHM2Q05LTXE3cEhRT2wKNlJoS3cvbVM5OW5PQjZiY3cvbndCN0tnUjNGeW15VEp6TjN0c1gvVGxYWnRkSXduMjdITUVhZytOSmZveXh2WQpnUXhpNE9IUW1mSVpxVXZCVEdFclZYKzBXSHNBMUh4VElnQmNvY252dVgrWGlZMXo4SHJCdUxsbUJSL0pRYWcvCjg0dlJBb0dBZUN3bVdmSUdUK3NZc1hPdjVoMnNyN3QxRGhkWHoyZnRxdUpGNUppaGlZSVhSTnZ1ZU50SWs4N0sKNHVpcGdnVEdwbXYvWXRnVzZhN2I4WU5BMWFmci85dTJkM2U1RlBGOERDYWoxSzJhN1RMTlI3ZUJtWFVLVzk2MApyM1pTSzBrYk02L1RYK2ZMYVhoWUFCWDUzenMzc1BMM0MvcUFweGRVWTZ5TmxBOHlRTm89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cong-chart/templates/vault.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: console-app
  name: release-name-cong-chart-vault-secrets
type: Opaque
data:
  root-token: Y2hhbmdlbWU=
---
# Source: cong-chart/templates/consul.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: console-app
  name: release-name-cong-chart-consul-config
data:
  consul.json: |
    {}
---
# Source: cong-chart/templates/nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: console-app
  name: release-name-cong-chart-nginx-config-template
data:
  nginx.conf.ctmpl: |
    worker_processes 1;
    events {
      worker_connections 1024;
    }
    http {
      sendfile on;
      upstream app_backend {
        server localhost:8080; # Replace with your actual backend service
      }
      server {
        listen 8181;
        location / {
          proxy_pass http://app_backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }
---
# Source: cong-chart/templates/release.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-release
  namespace: console-app
data:
  release-name: release-name
  release-namespace: default
---
# Source: cong-chart/templates/uaa.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: console-app
  name: release-name-cong-chart-uaa-config
data:
  uaa.yml: |
    {}
---
# Source: cong-chart/templates/filestore-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: maana-filestore-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  csi:
    driver: filestore.csi.storage.gke.io
    volumeHandle: "modeInstance/us-central1/maana-storage/maana_share"
  storageClassName: maana-filestore
---
# Source: cong-chart/templates/consul.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: console-app
  name: release-name-cong-chart-consul-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: cong-chart/templates/mysql.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: console-app
  name: release-name-cong-chart-mysql-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "2Gi"
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: console-app
  name: release-name-cong-chart-maana-share-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: maana-filestore
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: console-app
  name: release-name-cong-chart-compute-connectors-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: maana-filestore
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: console-app
  name: release-name-cong-chart-data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: maana-filestore
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: console-app
  name: release-name-cong-chart-configuration-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: console-app
  name: release-name-cong-chart-modules-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: cong-chart/templates/saq.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: console-app
  name: release-name-cong-chart-saq-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "10Gi"
---
# Source: cong-chart/templates/application-service-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-application-service
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: application-service
spec:
  ports:
    - port: 10121
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: application-service
---
# Source: cong-chart/templates/cassandra.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-cassandra
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cassandra
spec:
  ports:
    - port: 9160
      name: thrift
    - port: 9042
      name: cql
  clusterIP: None
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cassandra
---
# Source: cong-chart/templates/consul.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-consul
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: consul
spec:
  ports:
    - port: 8500
      name: http
    - port: 8300
      name: server
    - port: 8301
      name: serflan-tcp
      protocol: TCP
    - port: 8301
      name: serflan-udp
      protocol: UDP
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: consul
---
# Source: cong-chart/templates/documents-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-documents
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: documents
spec:
  ports:
    - port: 8088
      targetPort: 80
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: documents
---
# Source: cong-chart/templates/garbage-collector-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-garbage-collector
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: garbage-collector
spec:
  ports:
    - port: 10127
      targetPort: 10127
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: garbage-collector
---
# Source: cong-chart/templates/jobs.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-job-scheduler
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-scheduler
spec:
  ports:
    - port: 10123
      targetPort: 10123
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: job-scheduler
---
# Source: cong-chart/templates/jobs.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-job-scheduler
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: job-scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: job-scheduler
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: job-scheduler
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-scheduler:3.0.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - "bin/job-scheduler"
            - "-Dlog4j.configurationFile=/opt/log4j2.xml"
          ports:
            - containerPort: 10123
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config---
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-job-executor
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-executor
spec:
  ports:
    - port: 10200
      targetPort: 10200
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: job-executor
---
# Source: cong-chart/templates/kgservice.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-kgservice
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kgservice
spec:
  ports:
    - port: 10124
      targetPort: 10124
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: kgservice
---
# Source: cong-chart/templates/mysql.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-mysql
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mysql
spec:
  ports:
    - port: 3306
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: mysql
---
# Source: cong-chart/templates/nginx.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-nginx
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: nginx
spec:
  type: LoadBalancer
  ports:
    - port: 8181
      targetPort: 8181
      name: http
    - port: 8443
      targetPort: 8443
      name: https
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: nginx
---
# Source: cong-chart/templates/saq.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-saq
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: saq
spec:
  ports:
    - port: 32123
      targetPort: 32123
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: saq
---
# Source: cong-chart/templates/uaa.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-uaa
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: uaa
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: uaa
---
# Source: cong-chart/templates/vault.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: console-app
  name: release-name-cong-chart-vault
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vault
spec:
  ports:
    - port: 8200
      targetPort: 8200
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: vault
---
# Source: cong-chart/templates/application-service-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-application-service
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: application-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: application-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: application-service
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: application-service
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/application-service:3.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 10121
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: MAANA_PLUGIN_CONFIG
              value: "/opt/docker/configuration/modules.json"
          volumeMounts:
            - name: configuration
              mountPath: /opt/docker/configuration
            - name: modules
              mountPath: /opt/docker/lib/modules
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: configuration
          persistentVolumeClaim:
            claimName: release-name-cong-chart-configuration-pvc
        - name: modules
          persistentVolumeClaim:
            claimName: release-name-cong-chart-modules-pvc
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/consul.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-consul
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: consul
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: consul
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: consul
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: consul
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/consul:1.19.2"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command: ["consul"]
          args: ["agent", "-dev", "-ui", "-client=0.0.0.0", "-advertise=$(HOST_IP)"]
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          ports:
            - containerPort: 8500
            - containerPort: 8300
            - containerPort: 8301
              protocol: TCP
            - containerPort: 8301
              protocol: UDP
          volumeMounts:
            - name: consul-config
              mountPath: /consul/config/consul.json
              subPath: consul.json
            - name: consul-data
              mountPath: /consul/data
      volumes:
        - name: consul-config
          configMap:
            name: release-name-cong-chart-consul-config
        - name: consul-data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-consul-data-pvc
---
# Source: cong-chart/templates/documents-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-documents
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: documents
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: documents
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: documents
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: documents
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/documents:3.0.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 80
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
---
# Source: cong-chart/templates/garbage-collector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-garbage-collector
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: garbage-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: garbage-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: garbage-collector
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: garbage-collector
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/garbage-collector:3.0.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - "bin/garbage-collector"
            - "-Dmaana.tableGarbageCollector.pollingInterval=4m"
            - "-Dmaana.kindGarbageCollector.pollingInterval=4m"
            - "-Dlog4j.configurationFile=/opt/log4j2.xml"
            - "-Dmaana.jobLogGarbageCollector.pollingInterval=6m"
            - "-Dmaana.jobLogGarbageCollector.maxJobLogAge=15m"
            - "-Dmaana.metaIndexGarbageCollector.pollingInterval=4h"
            - "-Dmaana.jobGarbageCollector.maxJobAge=15m"
            - "-Dmaana.jobGarbageCollector.pollingInterval=5m"
          ports:
            - containerPort: 10127
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10127
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 10127
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/jobs.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-job-executor
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-executor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: job-executor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: job-executor
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: job-executor
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-executor:3.0.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - "bin/job-executor"
            - "-Dlog4j.configurationFile=/opt/log4j2.xml"
          ports:
            - containerPort: 10200
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: compute-connectors
              mountPath: /opt/docker/lib/compute-connectors
            - name: data
              mountPath: /opt/docker/data
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: compute-connectors
          persistentVolumeClaim:
            claimName: release-name-cong-chart-compute-connectors-pvc
        - name: data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-data-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/kgservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-kgservice
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kgservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: kgservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: kgservice
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: kgservice
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/kgservice:3.0.0"
          imagePullPolicy: IfNotPresent
          command:
            - "bin/kgservice"
          args:
            - "-Dlog4j.configurationFile=/opt/log4j2.xml"
          ports:
            - containerPort: 10124
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/mysql.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-mysql
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: mysql
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: mysql
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/mysql:5.7.21"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          args:
            - "--lower_case_table_names=1"
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-cong-chart-mysql-secrets
                  key: root-password
            - name: MYSQL_DATABASE
              value: "uaa"
            - name: MYSQL_USER
              value: "uaa"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-cong-chart-mysql-secrets
                  key: user-password
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-mysql-data-pvc
---
# Source: cong-chart/templates/nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-nginx
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: nginx
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: nginx
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/nginx:1.26.3"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 8181
            - containerPort: 8443
          env:
            - name: PROXY_PORT
              value: "8181"
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
          volumeMounts:
            - name: nginx-config-template
              mountPath: /etc/consul-templates/nginx.conf.ctmpl
              subPath: nginx.conf.ctmpl
            - name: nginx-certs
              mountPath: /self-ssl
      volumes:
        - name: nginx-config-template
          configMap:
            name: release-name-cong-chart-nginx-config-template
        - name: nginx-certs
          secret:
            secretName: release-name-cong-chart-nginx-certs
---
# Source: cong-chart/templates/saq.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-saq
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: saq
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: saq
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: saq
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: saq
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/saq:3.0.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - "/saq_run.sh"
            - "start"
            - "--config"
            - "/saq.cfg"
            - "--logLevel"
            - "DEBUG"
            - "--basePath"
            - "/SAQ"
          ports:
            - containerPort: 32123
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SAQ_ADVERTISE_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: saq-data
              mountPath: /SAQ
            - name: maana-share
              mountPath: /maana_share
      volumes:
        - name: saq-data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-saq-data-pvc
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
---
# Source: cong-chart/templates/uaa.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-uaa
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: uaa
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: uaa
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: uaa
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: uaa
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/cloudbreak-uaa:1.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_HOST
              value: "release-name-cong-chart-mysql"
            - name: DATABASE_USER
              value: "uaa"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-cong-chart-mysql-secrets
                  key: user-password
            - name: DATABASE_NAME
              value: "uaa"
            - name: OPENLDAP_HOST
              value: "openldap1"
          volumeMounts:
            - name: uaa-config
              mountPath: /uaa/
      volumes:
        - name: uaa-config
          configMap:
            name: release-name-cong-chart-uaa-config
---
# Source: cong-chart/templates/vault.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: console-app
  name: release-name-cong-chart-vault
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: vault
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: vault
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/vault:1.0.2"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - "vault"
          args:
            - "server"
            - "-dev"
          securityContext:
            capabilities:
              add:
                - "IPC_LOCK"
          env:
            - name: VAULT_DEV_ROOT_TOKEN_ID
              valueFrom:
                secretKeyRef:
                  name: release-name-cong-chart-vault-secrets
                  key: root-token
          ports:
            - containerPort: 8200
---
# Source: cong-chart/templates/cassandra.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: console-app
  name: release-name-cong-chart-cassandra
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cassandra
spec:
  serviceName: release-name-cong-chart-cassandra
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: cassandra
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: cassandra
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: cassandra
          image: "cassandra:4.1.3"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 9160
            - containerPort: 9042
          env:
            - name: CASSANDRA_START_RPC
              value: "true"
            - name: CASSANDRA_BROADCAST_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: cassandra-data
              mountPath: /var/lib/cassandra
  volumeClaimTemplates:
    - metadata:
        name: cassandra-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "5Gi"
---
# Source: cong-chart/templates/log4j-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: console-app
  name: release-name-cong-chart-log4j-config
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
data:
  log4j2.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="INFO">
      <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
          <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
      </Appenders>
      <Loggers>
        <Root level="info">
          <AppenderRef ref="Console"/>
        </Root>
      </Loggers>
    </Configuration>
---
# Source: cong-chart/templates/bootstrap-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: console-app
  name: release-name-cong-chart-bootstrap
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: bootstrap
spec:
  template:
    spec:
      serviceAccountName: release-name-cong-chart
      initContainers:
        - name: wait-for-consul
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z release-name-cong-chart-consul 8500; do echo "waiting for consul"; sleep 2; done;']
      containers:
        - name: bootstrap
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/bootstrap:3.0.0"
          imagePullPolicy: IfNotPresent
          command:
            - "bin/bootstrap"
            - "-Dlog4j.configurationFile=/opt/log4j2.xml"
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
          volumeMounts:
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
      restartPolicy: OnFailure
  backoffLimit: 10
