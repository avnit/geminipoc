---
# Source: cong-chart/templates/mysql.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: default
  name: release-name-cong-chart-mysql-secrets
type: Opaque
data:
  root-password: bXlzZWNyZXQ=
  user-password: bXlzZWNyZXQ=
---
# Source: cong-chart/templates/nginx.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: default
  name: release-name-cong-chart-nginx-certs
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVRENDQWppZ0F3SUJBZ0lRQlFrUDRERXZ3aU1pZUZoV05SRFBwekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkamIyNW5MV05oTUI0WERUSTFNVEF3TnpJeE1UVXlObG9YRFRJMk1UQXdOekl4TVRVeQpObG93S0RFbU1DUUdBMVVFQXhNZGNtVnNaV0Z6WlMxdVlXMWxMV052Ym1jdFkyaGhjblF0Ym1kcGJuZ3dnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREtER3dhb0htaWhJa0REeDRicDJFTFZkL0IKUWxxVVUwalViNFRpVVl0VlFiTzFZKzlkR0F0N3FrY0tsRGlWOE5EV1ZMR2QrL250NTR2MVNnNFp1c0NLOHhmTQoxdlJRM25TN0xWNFlycWZCaFBpVVRBbWRpTHM4SER1MlMxWUR6K0p1MTh1MExoUHJtS2kxK3NBb2dZaVV2QjFhCk4vVVhpdWJUcXNNVys1L0xxcEFJdkoxZ2ZTZXhGU0JRYzJQQTJrZngvQTdGbXVaSndtZVBmMmN5M0IwcTI4Q2gKcFIweTdXME85dVd5NXNzM2ROLytxUHBkS2gyR2lHM0RrTWp1QUhmaXRkSzhOQmdob0RGSk5kcHdCenBsbmlKMApEL0hNZ2JMeGdWSEZZUEhXOEx3R1N3THhNaUVWTXZTdENmOUJ2b2tRczdxdTF6K1V0SkdQTGZoVEh4RHBBZ01CCkFBR2pnWXN3Z1lnd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGR3B6Vk45eVJJS25RSWZJMWthZQpIVmQyZGJqUU1DZ0dBMVVkRVFRaE1CK0NIWEpsYkdWaGMyVXRibUZ0WlMxamIyNW5MV05vWVhKMExXNW5hVzU0Ck1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUxsRmJQQ2FnZmkrSnN6VmluUUZpbisvMXgxWWRtMG1LR0ZTdnoKL3ZaU1pUVjdRcTArVkNvdUozdDdYdlBSMDBiNkdUSDRGUFpQNzd6ajJKQ0FCdHd5Y2RKMEZ6ZUxoeEVoRTdtZwprZk5rcTJQdStDTElEdC81Uk5lY0dJZXRoSzRlbFNVUGtja2ZoaEZuWm1SMDVNUjBlZzdCc0dEOXo2UDZKVmlSCjV5MnFKeXRhM0VJT3JwSEdwazVxeUs4aWxKWEFvQUErU3FMOXN5N0NqUVNNYWtCRjBzcFdhUWtwemxnUm9Fd0gKb040S3IyRy9DRm4wNEFudUJKL0w4eXB3aUFwMUhSUCtTSHZ0YjJzRjdJYm1PWnNIcUtrV2lIeHlVVzNGdm9ZbQo5bjRIelQ0enFoeVBjbXpIbW9tSjg2ejhEZHRaR09VdFpWOGtyWXpnTFRDNVZUcmsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWd4c0dxQjVvb1NKQXc4ZUc2ZGhDMVhmd1VKYWxGTkkxRytFNGxHTFZVR3p0V1B2ClhSZ0xlNnBIQ3BRNGxmRFExbFN4bmZ2NTdlZUw5VW9PR2JyQWl2TVh6TmIwVU41MHV5MWVHSzZud1lUNGxFd0oKbllpN1BCdzd0a3RXQTgvaWJ0Zkx0QzRUNjVpb3RmckFLSUdJbEx3ZFdqZjFGNHJtMDZyREZ2dWZ5NnFRQ0x5ZApZSDBuc1JVZ1VITmp3TnBIOGZ3T3hacm1TY0puajM5bk10d2RLdHZBb2FVZE11MXREdmJsc3ViTE4zVGYvcWo2ClhTb2Rob2h0dzVESTdnQjM0clhTdkRRWUlhQXhTVFhhY0FjNlpaNGlkQS94eklHeThZRlJ4V0R4MXZDOEJrc0MKOFRJaEZUTDByUW4vUWI2SkVMTzZydGMvbExTUmp5MzRVeDhRNlFJREFRQUJBb0lCQUFTZXR6SkxSUHNsVFBvZwpyZ1Eyd3RNb2VzWVJLT1lxZEZ1RkxlRlY3RTBLMFJ1eDh0aDNqS0o0SFlrOWNMUC9BWjZxbkdnYnZOYUd2RzVqCmVLaVJwNUx2WlkrU2o3VkxFMHk4TG52SUdXWmxRYnAwWEF3Z1F3S09naHpVUEVRZTh0TXN0N3NuMXl1cXlzMysKRFBxd0laQlRGajZJbm9aVUNXbDA3UHdzWm5ZL0pwVUx0bm9RRk9Ia2tKRzIyR1oxeG5xU3BpVUZEWXFyMExKcQpraGo5R0ZDZVlkdEdSekJxK3p5WkRoaTZGZlI0MHpZZWppNFN2Si9ucGJzdVhqQ0VTK2E4cUtGYXN6alBGMDR0CmVrWHhtN0Jmd2tlekRHaUsvU3dUTERkS1JSNE8zRHJvVzNLQmsyZktxcXVSWitoYnJUSU1ZNG9FTll3L2pSbHUKZ3k1MEttRUNnWUVBK1gySGMzWjFXUStrRjJEOThudUNZZ2REai84U2Q5Qnk0OGhsWnowZFViRkV4SkRtenY5bQp0eUdvZ0JTVGN5TnpqemF6RzhjNmYzbnN3YXR3dUtENmhML2tXaWE5aTQvbTVGTnM4RU8zRWxUYmp0VnJGQWlMClBVaUlLOXBlLzFxTUZlNUkrNFVPeXd6ck5XNUxoa1NVSGZScHVDa2RCQ0dsRk5hcXV5RE9oemtDZ1lFQXoxSUIKYUFoaytKbU80cjJ4WnVhRXo4dGlxR1Urb1ZmdHk3NXBhSndqQVJBRUpuKzF0ZFpLajF0UWxhUnh3Vlc0RU5LWApncmw3dFZmMVQyRUN3ekxVSFhJQmNBby9QeEhoTC9tc2xRYmc1WTRkNXhIU2pjenk3ZW9zREl3YXVaNm9SQnd5CkNsbVN2ZmFqV29SSkEwaU9kUGFXMWNXbkxHbzh1VThtYnJOcHB6RUNnWUVBcWNvMU9XMy90S25CV2F2SGg1Tm8KaTBBNFNiSWtwbWUxR0xIVDJPdXRuV0FQMWRwclNhcGxBL0tqRXU5dDNhamR4elJKdG5qaXBjaWJTTDVkQ3psNgo1SWNYYUFiL2JoQno2U1doZU80TWxDd3Q4OG5vZ296Qi9lWHp6aXhpQkZSaUM3Ykw4bWgrUmMrMzd2ZnQ3Q1dWCnk4RC9oYlp0S2RlZjJrdXhpNEpySzNrQ2dZQXh5ZlR5Z2dtVnRuTWRPd2N1dWkrdEk2QVc1dkdxbDg1US92S2IKbjl1OE5wZDRrM1VWTFZpTW94WndTYVRVRkh6MjlVeFRwYTN5K0NPK280S2hWRVNpcWExMHRkRkltVWVtV09TOAppWUZiUDgwb29Cd2IxOXVEalpoMGp2VWdITjAyTmp0Q1J3NjV0bEMydlV3M2tLWTlxcmJBc2c0YTJZeXB5RHRuCm5JakVFUUtCZ0hESFRubnI3am92czgvSnBmdHZhWDdUVW0ydlQ3ZU9qVUk5TkRyUVVTeFpDSGpjaGNoNkRNUEcKZFYxTjQzRWZ4SlhtekVyc29jRWVjSVplNlllRDJXNWtLZ0lBakMvTU5vclFBOWlxYzV3ZVloV1RKSWg3TzdrdApkQzFjQzVvWmVDTUZiQ0dqblNmUUpjREF2ZG1wUkQrVnUrdDJZUVZwU2E4OXUvQjlwbU5TCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cong-chart/templates/vault.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: default
  name: release-name-cong-chart-vault-secrets
type: Opaque
data:
  root-token: Y2hhbmdlbWU=
---
# Source: cong-chart/templates/consul.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: release-name-cong-chart-consul-config
data:
  consul.json: |
    {}
---
# Source: cong-chart/templates/nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: release-name-cong-chart-nginx-config-template
data:
  nginx.conf.ctmpl: |
---
# Source: cong-chart/templates/release.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-release
  namespace: default
data:
  release-name: release-name
  release-namespace: default
---
# Source: cong-chart/templates/uaa.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: release-name-cong-chart-uaa-config
data:
  uaa.yml: |
    {}
---
# Source: cong-chart/templates/consul.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: release-name-cong-chart-consul-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: cong-chart/templates/mysql.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: release-name-cong-chart-mysql-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "2Gi"
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: release-name-cong-chart-maana-share-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: release-name-cong-chart-compute-connectors-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: release-name-cong-chart-data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: release-name-cong-chart-configuration-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# Source: cong-chart/templates/pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: release-name-cong-chart-modules-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# Source: cong-chart/templates/saq.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: release-name-cong-chart-saq-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: cong-chart/templates/application-service-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-application-service
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: application-service
spec:
  ports:
    - port: 10121
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: application-service
---
# Source: cong-chart/templates/cassandra.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-cassandra
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cassandra
spec:
  ports:
    - port: 9160
      name: thrift
    - port: 9042
      name: cql
  clusterIP: None
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cassandra
---
# Source: cong-chart/templates/consul.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-consul
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: consul
spec:
  ports:
    - port: 8500
      name: http
    - port: 8300
      name: server
    - port: 8301
      name: serflan-tcp
      protocol: TCP
    - port: 8301
      name: serflan-udp
      protocol: UDP
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: consul
---
# Source: cong-chart/templates/documents-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-documents
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: documents
spec:
  ports:
    - port: 8088
      targetPort: 80
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: documents
---
# Source: cong-chart/templates/garbage-collector-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-garbage-collector
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: garbage-collector
spec:
  ports:
    - port: 10127
      targetPort: 10127
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: garbage-collector
---
# Source: cong-chart/templates/jobs.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-job-scheduler
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-scheduler
spec:
  ports:
    - port: 10123
      targetPort: 10123
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: job-scheduler
---
# Source: cong-chart/templates/jobs.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-job-scheduler
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: job-scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: job-scheduler
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: job-scheduler
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-scheduler:latest"
          imagePullPolicy: IfNotPresent
          command: ["bin/job-scheduler", "-Dlog4j.configurationFile=/opt/log4j2.xml"]
          ports:
            - containerPort: 10123
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-job-executor1
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-executor1
spec:
  ports:
    - port: 10200
      targetPort: 10200
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: job-executor1
---
# Source: cong-chart/templates/jobs.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-job-executor2
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-executor2
spec:
  ports:
    - port: 10201
      targetPort: 10200
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: job-executor2
---
# Source: cong-chart/templates/kgservice.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-kgservice
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kgservice
spec:
  ports:
    - port: 10124
      targetPort: 10124
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: kgservice
---
# Source: cong-chart/templates/mysql.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-mysql
spec:
  ports:
    - port: 3306
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: mysql
---
# Source: cong-chart/templates/nginx.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-nginx
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: nginx
spec:
  type: LoadBalancer
  ports:
    - port: 8181
      targetPort: 8181
      name: http
    - port: 8443
      targetPort: 8443
      name: https
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: nginx
---
# Source: cong-chart/templates/saq.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-saq
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: saq
spec:
  ports:
    - port: 32123
      targetPort: 32123
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: saq
---
# Source: cong-chart/templates/uaa.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-uaa
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: uaa
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: uaa
---
# Source: cong-chart/templates/vault.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name-cong-chart-vault
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vault
spec:
  ports:
    - port: 8200
      targetPort: 8200
  selector:
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: vault
---
# Source: cong-chart/templates/application-service-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-application-service
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: application-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: application-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: application-service
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: application-service
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/application-service:3.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 10121
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: MAANA_PLUGIN_CONFIG
              value: "/opt/docker/configuration/modules.json"
          volumeMounts:
            - name: configuration
              mountPath: /opt/docker/configuration
            - name: modules
              mountPath: /opt/docker/lib/modules
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: configuration
          persistentVolumeClaim:
            claimName: release-name-cong-chart-configuration-pvc
        - name: modules
          persistentVolumeClaim:
            claimName: release-name-cong-chart-modules-pvc
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/consul.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-consul
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: consul
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: consul
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: consul
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: consul
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/consul:1.19.2"
          imagePullPolicy: IfNotPresent
          command:
            - "agent"
            - "-advertise=$(HOST_IP)"
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          ports:
            - containerPort: 8500
            - containerPort: 8300
            - containerPort: 8301
              protocol: TCP
            - containerPort: 8301
              protocol: UDP
          volumeMounts:
            - name: consul-config
              mountPath: /consul/config/consul.json
              subPath: consul.json
            - name: consul-data
              mountPath: /consul/data
      volumes:
        - name: consul-config
          configMap:
            name: release-name-cong-chart-consul-config
        - name: consul-data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-consul-data-pvc
---
# Source: cong-chart/templates/documents-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-documents
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: documents
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: documents
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: documents
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: documents
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/documents:3.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
---
# Source: cong-chart/templates/garbage-collector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-garbage-collector
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: garbage-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: garbage-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: garbage-collector
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: garbage-collector
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/garbage-collector:3.0.0"
          imagePullPolicy: IfNotPresent
          command:
            - "bin/garbage-collector"
            - "-Dmaana.tableGarbageCollector.pollingInterval=4m"
            - "-Dmaana.kindGarbageCollector.pollingInterval=4m"
            - "-Dlog4j.configurationFile=/opt/log4j2.xml"
            - "-Dmaana.jobLogGarbageCollector.pollingInterval=6m"
            - "-Dmaana.jobLogGarbageCollector.maxJobLogAge=15m"
            - "-Dmaana.metaIndexGarbageCollector.pollingInterval=4h"
            - "-Dmaana.jobGarbageCollector.maxJobAge=15m"
            - "-Dmaana.jobGarbageCollector.pollingInterval=5m"
          ports:
            - containerPort: 10127
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/jobs.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-job-executor1
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-executor1
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: job-executor1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: job-executor1
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: job-executor1
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-executor:latest"
          imagePullPolicy: IfNotPresent
          command: ["bin/job-executor", "-Dlog4j.configurationFile=/opt/log4j2.xml"]
          ports:
            - containerPort: 10200
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: compute-connectors
              mountPath: /opt/docker/lib/compute-connectors
            - name: data
              mountPath: /opt/docker/data
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: compute-connectors
          persistentVolumeClaim:
            claimName: release-name-cong-chart-compute-connectors-pvc
        - name: data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-data-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/jobs.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-job-executor2
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: job-executor2
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: job-executor2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: job-executor2
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: job-executor2
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-executor:latest"
          imagePullPolicy: IfNotPresent
          command: ["bin/job-executor", "-Dlog4j.configurationFile=/opt/log4j2.xml"]
          ports:
            - containerPort: 10200
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: compute-connectors
              mountPath: /opt/docker/lib/compute-connectors
            - name: data
              mountPath: /opt/docker/data
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: compute-connectors
          persistentVolumeClaim:
            claimName: release-name-cong-chart-compute-connectors-pvc
        - name: data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-data-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/kgservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-kgservice
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kgservice
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: kgservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: kgservice
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: kgservice
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/kgservice:latest"
          imagePullPolicy: IfNotPresent
          command: ["bin/kgservice", "-Dlog4j.configurationFile=/opt/log4j2.xml"]
          ports:
            - containerPort: 10124
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
---
# Source: cong-chart/templates/mysql.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-mysql
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mysql
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: mysql
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: mysql
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/mysql:5.7.21"
          imagePullPolicy: IfNotPresent
          args:
            - "mysqld"
            - "--user=root"
            - "--verbose"
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-cong-chart-mysql-secrets
                  key: root-password
            - name: MYSQL_DATABASE
              value: "uaa"
            - name: MYSQL_USER
              value: "uaa"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-cong-chart-mysql-secrets
                  key: user-password
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-mysql-data-pvc
---
# Source: cong-chart/templates/nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-nginx
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: nginx
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: nginx
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/nginx:1.26.3"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8181
            - containerPort: 8443
          env:
            - name: PROXY_PORT
              value: "8181"
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
          volumeMounts:
            - name: nginx-config-template
              mountPath: /etc/consul-templates/nginx.conf.ctmpl
              subPath: nginx.conf.ctmpl
            - name: nginx-certs
              mountPath: /self-ssl
      volumes:
        - name: nginx-config-template
          configMap:
            name: release-name-cong-chart-nginx-config-template
        - name: nginx-certs
          secret:
            secretName: release-name-cong-chart-nginx-certs
---
# Source: cong-chart/templates/saq.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-saq
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: saq
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: saq
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: saq
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: saq
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/saq:3.0.0"
          imagePullPolicy: IfNotPresent
          command: ["start", "--config", "/saq.cfg", "--logLevel", "DEBUG", "--basePath", "/SAQ"]
          ports:
            - containerPort: 32123
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
            - name: SAQ_ADVERTISE_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: saq-data
              mountPath: /SAQ
            - name: maana-share
              mountPath: /maana_share
      volumes:
        - name: saq-data
          persistentVolumeClaim:
            claimName: release-name-cong-chart-saq-data-pvc
        - name: maana-share
          persistentVolumeClaim:
            claimName: release-name-cong-chart-maana-share-pvc
---
# Source: cong-chart/templates/uaa.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-uaa
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: uaa
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: uaa
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: uaa
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: uaa
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/cloudbreak-uaa:1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_HOST
              value: "release-name-cong-chart-mysql"
            - name: DATABASE_USER
              value: "uaa"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-cong-chart-mysql-secrets
                  key: user-password
            - name: DATABASE_NAME
              value: "uaa"
            - name: OPENLDAP_HOST
              value: "openldap1"
          volumeMounts:
            - name: uaa-config
              mountPath: /uaa/
      volumes:
        - name: uaa-config
          configMap:
            name: release-name-cong-chart-uaa-config
---
# Source: cong-chart/templates/vault.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name-cong-chart-vault
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vault
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: vault
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: vault
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/vault:1.0.2"
          imagePullPolicy: IfNotPresent
          command:
            - "server"
            - "-dev"
          securityContext:
            capabilities:
              add:
                - "IPC_LOCK"
          env:
            - name: VAULT_DEV_ROOT_TOKEN_ID
              valueFrom:
                secretKeyRef:
                  name: release-name-cong-chart-vault-secrets
                  key: root-token
          ports:
            - containerPort: 8200
---
# Source: cong-chart/templates/cassandra.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: default
  name: release-name-cong-chart-cassandra
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cassandra
spec:
  serviceName: release-name-cong-chart-cassandra
  selector:
    matchLabels:
      app.kubernetes.io/name: cong-chart
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: cassandra
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cong-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: cassandra
    spec:
      serviceAccountName: release-name-cong-chart
      containers:
        - name: cassandra
          image: "cassandra:4.1.3"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9160
            - containerPort: 9042
          env:
            - name: CASSANDRA_START_RPC
              value: "true"
            - name: CASSANDRA_BROADCAST_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: cassandra-data
              mountPath: /var/lib/cassandra
  volumeClaimTemplates:
    - metadata:
        name: cassandra-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "5Gi"
---
# Source: cong-chart/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: release-name-cong-chart
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
    iam.gke.io/gcp-service-account: terraform@avathon-saas-runtime-setup.iam.gserviceaccount.com
---
# Source: cong-chart/templates/log4j-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-cong-chart-log4j-config
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
data:
  log4j2.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="INFO">
      <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
          <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
      </Appenders>
      <Loggers>
        <Root level="info">
          <AppenderRef ref="Console"/>
        </Root>
      </Loggers>
    </Configuration>
---
# Source: cong-chart/templates/bootstrap-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: default
  name: release-name-cong-chart-bootstrap
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
    helm.sh/chart: cong-chart-0.2.1
    app.kubernetes.io/name: cong-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: bootstrap
spec:
  template:
    spec:
      serviceAccountName: release-name-cong-chart
      initContainers:
        - name: wait-for-consul
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z release-name-cong-chart-consul 8500; do echo "waiting for consul"; sleep 2; done;']
      containers:
        - name: bootstrap
          image: "us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/bootstrap:latest"
          imagePullPolicy: IfNotPresent
          command:
            - "bin/bootstrap"
            - "-Dlog4j.configurationFile=/opt/log4j2.xml"
          env:
            - name: CONSUL_HOST
              value: "release-name-cong-chart-consul"
          volumeMounts:
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: log4j-config
          configMap:
            name: release-name-cong-chart-log4j-config
      restartPolicy: OnFailure
  backoffLimit: 10
