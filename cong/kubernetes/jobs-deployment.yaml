# kubernetes/jobs-deployment.yaml

apiVersion: v1
kind: Service
metadata:
  name: job-scheduler1
spec:
  ports:
    - port: 10123
      targetPort: 10123
  selector:
    app: job-scheduler1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: job-scheduler1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: job-scheduler1
  template:
    metadata:
      labels:
        app: job-scheduler1
    spec:
      containers:
        - name: job-scheduler1
          image: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-scheduler:${BUILD_VERSION} # You need to replace ${BUILD_VERSION}
          command: ["bin/job-scheduler", "-Dlog4j.configurationFile=/opt/log4j2.xml"]
          ports:
            - containerPort: 10123
          env:
            - name: CONSUL_HOST
              value: "consul1"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: maana-share-pvc
        - name: log4j-config
          configMap:
            name: log4j-config
---
apiVersion: v1
kind: Service
metadata:
  name: job-executor1
spec:
  ports:
    - port: 10200
      targetPort: 10200
  selector:
    app: job-executor1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: job-executor1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: job-executor1
  template:
    metadata:
      labels:
        app: job-executor1
    spec:
      containers:
        - name: job-executor1
          image: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-executor:${BUILD_VERSION} # You need to replace ${BUILD_VERSION}
          command: ["bin/job-executor", "-Dlog4j.configurationFile=/opt/log4j2.xml"]
          ports:
            - containerPort: 10200
          env:
            - name: CONSUL_HOST
              value: "consul1"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: compute-connectors
              mountPath: /opt/docker/lib/compute-connectors
            - name: data
              mountPath: /opt/docker/data
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: maana-share-pvc
        - name: compute-connectors
          persistentVolumeClaim:
            claimName: compute-connectors-pvc
        - name: data
          persistentVolumeClaim:
            claimName: data-pvc
        - name: log4j-config
          configMap:
            name: log4j-config
---
apiVersion: v1
kind: Service
metadata:
  name: job-executor2
spec:
  ports:
    - port: 10201
      targetPort: 10200
  selector:
    app: job-executor2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: job-executor2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: job-executor2
  template:
    metadata:
      labels:
        app: job-executor2
    spec:
      containers:
        - name: job-executor2
          image: us-docker.pkg.dev/sparkcognition-neon-dev/engineering/neon/job-executor:${BUILD_VERSION} # You need to replace ${BUILD_VERSION}
          command: ["bin/job-executor", "-Dlog4j.configurationFile=/opt/log4j2.xml"]
          ports:
            - containerPort: 10200
          env:
            - name: CONSUL_HOST
              value: "consul1"
            - name: SECURE_VAULT
              value: "false"
          volumeMounts:
            - name: maana-share
              mountPath: /maana_share
            - name: compute-connectors
              mountPath: /opt/docker/lib/compute-connectors
            - name: data
              mountPath: /opt/docker/data
            - name: log4j-config
              mountPath: /opt/log4j2.xml
              subPath: log4j2.xml
      volumes:
        - name: maana-share
          persistentVolumeClaim:
            claimName: maana-share-pvc
        - name: compute-connectors
          persistentVolumeClaim:
            claimName: compute-connectors-pvc
        - name: data
          persistentVolumeClaim:
            claimName: data-pvc
        - name: log4j-config
          configMap:
            name: log4j-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: compute-connectors-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
